name: deploy-gcp

on:
  pull_request:
    paths:
      - 'infra/gcp/**'

env:
  TF_VAR_dnsimple_account: ${{secrets.TF_VAR_DNSIMPLE_ACCOUNT}}
  TF_VAR_dnsimple_token: ${{secrets.TF_VAR_DNSIMPLE_TOKEN}}

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: GCP for Terraform
        uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: '290.0.1'
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY_TERRAFORM }}
          export_default_credentials: true

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Init
        run: cd infra/gcp && terraform init

      - name: Terraform Format
        run: cd infra/gcp && terraform fmt -check

      - name: Terraform Plan
        run: cd infra/gcp && terraform plan -out "planfile"

  gke:
    name: 'GKE'
    needs: terraform
    runs-on: ubuntu-latest

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: GCP
        uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: '290.0.1'
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}

      - name: Get cluster credentials
        run: gcloud container clusters get-credentials $GCP_CLUSTER_NAME --$GCP_LOCATION_TYPE $GCP_LOCATION
        env:
          GCP_CLUSTER_NAME: ${{ secrets.GCP_CLUSTER_NAME }}
          GCP_LOCATION_TYPE: ${{ secrets.GCP_LOCATION_TYPE }}
          GCP_LOCATION: ${{ secrets.GCP_LOCATION }}

      - name: Install kubeval
        run: |
          wget https://github.com/instrumenta/kubeval/releases/latest/download/kubeval-linux-amd64.tar.gz
          tar xf kubeval-linux-amd64.tar.gz
          sudo cp kubeval /usr/local/bin

      - name: Test manifests
        run: make test-prod-manifests
